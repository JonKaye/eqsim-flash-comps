<?xml version="1.0" encoding="UTF-8"?>
<book title="FStEng v1.5 Reference" directory="FStEngv1-5Reference">
<page href="FStEngOneFive_22.html" title="hStateC" text="hStateC Availability Flash Player 6 r65. Description This class defines a hierarchical state that may have several concurrent sub-networks. Author Jonathan Kaye (FlashSim.com)" />
<page href="FStEngOneFive_34.html" title="addStMgr" text="addStMgr Availability Flash Player 6 r65. Usage myhStateC.addStMgr(sm) Parameters sm State (network) manager pointer Returns Nothing Description This method is used to add a state network manager to the current hStateC. The hStateC can manage multiple concurrent networks. The only catch is that states in the network must have unique ID's, even with respect to other states in sibling networks." />
<page href="FStEngOneFive_42.html" title="remState" text="remState Availability Flash Player 6 r65. Usage myhStateC.remState() Returns Nothing Description Remove the memory allocated for this state." />
<page href="FStEngOneFive_36.html" title="chgSt" text="chgSt Availability Flash Player 6 r65. Usage myhStateC.chgSt(transID, val) Parameters transID val Returns Nothing Description Change state using transition trans_i, with an optional value for the transition function as a second argument. If you look at the code, this function passes the information to the chgSt method of the state manager to do the real work. The reason we define this dummy is so that modelers see the direct relationship to the transition id, which is unique by state. For example, if a caller wants to change the current state, state 2, using transition 0, the caller would write: state2.chgSt(0); This implies that the transition 0 is relative to the state. The same unaltered call would be sm.chgSt(0); in which 'sm' is the state manager of state 2 and its siblings. It is less obvious from the second form that the processor is using the current state (2)'s transition 0, as opposed to, perhaps, state 1 or 6's transition with id 0. The second argument, val, is an optional value to send in to the transition function." />
<page href="FStEngOneFive_29.html" title="addEntryNotice" text="addEntryNotice Availability Flash Player 6 r65. Usage myhStateC.addEntryNotice(listener) Parameters listener Listener object that wants to receive onEnter message when this state is made active. Returns Nothing Description This is a new method of FStEng v1-5. It lets anyone register a listener to the event when a state becomes active. It could be used by a presentation to be notified when a particular state becomes active, perhaps fulfilling some goal. Unlike entActs(), this mechanism allows anyone to execute actions when the state is activated." />
<page href="FStEngOneFive_43.html" title="removeEntryNotice" text="removeEntryNotice Availability Flash Player 6 r65. Usage myhStateC.removeEntryNotice(listener) Parameters listener Listener object registered to receive entry notices. Returns Nothing Description This is a new method of FStEng v1-5. It removes the listener from the list of those notified when the state becomes active." />
<page href="FStEngOneFive_32.html" title="addLeaveNotice" text="addLeaveNotice Availability Flash Player 6 r65. Usage myhStateC.addLeaveNotice(listener) Parameters listener Listener object that wants to receive onLeave message when this state is exited (deactivated). Returns Nothing Description This is a new method of FStEng v1-5. It lets anyone register a listener to the event when a state is deactivated. It could be used by a presentation to be notified when a particular state is left, perhaps fulfilling some goal. Unlike lvActs(), this mechanism allows anyone to execute actions when the state is deactivated." />
<page href="FStEngOneFive_44.html" title="removeLeaveNotice" text="removeLeaveNotice Availability Flash Player 6 r65. Usage myhStateC.removeLeaveNotice(listener) Parameters listener Listener object registered to receive leave notices. Returns Nothing Description This is a new method of FStEng v1-5. It removes the listener from the list of those notified when the state is deactived." />
<page href="FStEngOneFive_38.html" title="isActive" text="isActive Availability Flash Player 6 r65. Usage myhStateC.isActive() Returns True if the state is active, false if not. Description convenience function. Returns true if this state is currently active, false if not." />
<page href="FStEngOneFive_35.html" title="addTrans" text="addTrans Availability Flash Player 6 r65. Usage myhStateC.addTrans(id, trans, tf) Parameters id ID of the transition (must be unique for this state) trans A trans or transLvl object instance tf Trigger name (string) for this transition (FStEng v1-5) Returns Nothing Description Add a transition (either simple or multi-level) to this state. If the developer wants to manually code the event handler, then the developer uses chgSt() to fire this transition when it is triggered. To use the v1-5 event handling mechanism, simply tell this method the event name string (third parameter)." />
<page href="FStEngOneFive_31.html" title="addIntAct" text="addIntAct Availability Flash Player 6 r65. Usage myhStateC.addIntAct(id, actfn, actTrig) Parameters id ID of the internal action (must be unique with respect to other actions on this state) actfn Function to call when action is triggered actTrig Trigger name (string) for this transition (FStEng v1-5) Returns Nothing Description Add an internal action for the state. If the developer wants to manually code the event handler, then the developer uses execIntAct() to fire this action when it is triggered. To use the v1-5 event handling mechanism, simply tell this method the event name string (third parameter)." />
<page href="FStEngOneFive_37.html" title="execIntAct" text="execIntAct Availability Flash Player 6 r65. Usage myhStateC.execIntAct(id, val) Parameters id ID of the internal action val Optional value to pass action function Returns Nothing Description Executes internal action with id for the state Can't do error checking in Flash 5 because this.intActs[id] is a function and there's a bug that makes intActs[id] == null. We should use typechecking in Flash 6" />
<page title="addPulseActivity" href="FStEngOneFive_33.html" text="addPulseActivity Availability Flash Player 6 r65. Usage myhStateC.addPulseActivity(id, intvl, fnOrMet, obj) Parameters id ID of the activity (must be unique among activities on this state) intvl Interval, in milliseconds, between calls fnOrMet Function object, or method name (string) to invoke obj If fnOrMet is the method name, this is the object on which the method resides Returns Nothing Description Use this method to add an activity to the state that fires at a specified interval. You can specify a function or method to call. Note: if you need to refer to the timeline from within a function, use the last example to call your function. Example // For a function: myFuncmyState.addPulseActivity(0, 500, myFunc);// For a method: myObj.myMethodmyState.addPulseActivity(0, 500, &quot;myMethod&quot;, myObj);// For a function needing access to the timeline:myState.addFPulseActivity(0, 20, &quot;myFunc&quot;, this); // when 'this' is the timeline" />
<page title="addFPulseActivity" href="FStEngOneFive_30.html" text="addFPulseActivity Availability Flash Player 6 r65. Usage myhStateC.addFPulseActivity(id, intvl, fnOrMet, obj) Parameters id ID of the activity (must be unique among activities on this state) intvl Interval, in frames, between calls fnOrMet Function object, or method name (string) to invoke obj If fnOrMet is the method name, this is the object on which the method resides Returns Nothing Description Use this method to add an activity to the state that fires every x frames. You can specify a function or method to call. Note: if you need to refer to the timeline from within a function, use the last example to call your function. Example // For a function: myFuncmyState.addFPulseActivity(0, 20, myFunc);// For a method: myObj.myMethodmyState.addFPulseActivity(0, 20, &quot;myMethod&quot;, myObj);// For a function needing access to the timeline:myState.addFPulseActivity(0, 20, &quot;myFunc&quot;, this); // when 'this' is the timeline" />
<page href="FStEngOneFive_40.html" title="remPulseActivity" text="remPulseActivity Availability Flash Player 6 r65. Usage myhStateC.remPulseActivity(id) Parameters id ID of the activity Returns Nothing Description Removes the specified pulse activity from the state." />
<page title="addContinActivity" href="FStEngOneFive_28.html" text="addContinActivity Availability Flash Player 6 r65. Usage myhStateC.addContinActivity(id, mclip, hideClip) Parameters id ID for this continuous activity (must be unique only for other continuous activities on this state) mclip Movie clip to activate/deactivate hideClip Returns Nothing Description Adds a continuous state activity for the state. A continuous activity is simply a mechanism to start and stop a movie clip upon entry/exit from a state. Upon state entry, the movie clip is told &quot;gotoAndPlay(2)&quot;. On exit, the clip is told &quot;gotoAndStop(1)&quot;. There is a parameter, hideClip, that says whether or not to make the movie clip invisible (default is true) when the state is inactive." />
<page href="FStEngOneFive_39.html" title="remContinActivity" text="remContinActivity Availability Flash Player 6 r65. Usage myhStateC.remContinActivity(id) Parameters id Returns Nothing Description This method removes the state activity with the given id from the state." />
<page href="FStEngOneFive_25.html" title="onEnter" text="onEnter Availability Flash Player 6 r65. Usage myhStateC.onEnter() Description This event is generated upon entry to a specified state if the developer has registered a state on-entry notice using addEntryNotice(). It passes the state name and a pointer to the state." />
<page href="FStEngOneFive_27.html" title="onLeave" text="onLeave Availability Flash Player 6 r65. Usage myhStateC.onLeave() Description This event is generated upon leaving a specified state if the developer has registered a state on-leave notice using addLeaveNotice(). It passes the state name and a pointer to the state." />
<page href="FStEngOneFive_23.html" title="entActs" text="entActs Availability Flash Player 6 r65. Usage myhStateC.entActs() Description Actions executed when entering state. Override this method to use your own actions when the state is entered. By default, it prints a notice in the Output window." />
<page href="FStEngOneFive_24.html" title="lvActs" text="lvActs Availability Flash Player 6 r65. Usage myhStateC.lvActs() Description Actions executed when leaving the state. Override this method to use your own actions when the state is exited. By default, it prints a notice in the Output window." />
<page href="FStEngOneFive_26.html" title="onEvent" text="onEvent Availability Flash Player 6 r65. Usage myhStateC.onEvent() Description This is a new feature of FStEng v1-5, which provides an easy way to direct and process events. Rather than having the developer provide an ieh() method, which determines the current state and which transitions or actions should be triggered, the new mechanism automatically routes the event to the most specific (deepest in network) active state's onEvent handler. The handler, by default, looks through the triggers of the transitions and internal actions on the state. If a trigger is true, it then fires the transition or action. The default routine passes the event to the state's parent to check its transitions and actions as well. If a transition gets fired, then parent states do not evaluate their transitions, but still evaluate their internal action triggers. This extra processing can add time because all triggers are checked in the chain of active states, regardless of their chance of success. The beauty of this system is that if a state wants to optimize event handling for itself and its sub-networks, it merely needs to override onEvent and follow the rules about passing up the event once finished. If you really need to optimize the event handling, you can still override ieh() and bypass this feature completely, and do it as described in our book." />
<page href="FStEngOneFive_1.html" title="hState" text="hState Availability Flash Player 6 r65. Description This class defines a hierarchical state that has one sub-network. Author Jonathan Kaye (FlashSim.com)" />
<page href="FStEngOneFive_19.html" title="remState" text="remState Availability Flash Player 6 r65. Usage myhState.remState() Returns Nothing Description Remove the memory allocated for this state." />
<page href="FStEngOneFive_14.html" title="chgSt" text="chgSt Availability Flash Player 6 r65. Usage myhState.chgSt(transID, val) Parameters transID val Returns Nothing Description Change state using transition trans_i, with an optional value for the transition function as a second argument. If you look at the code, this function passes the information to the chgSt method of the state manager to do the real work. The reason we define this dummy is so that modelers see the direct relationship to the transition id, which is unique by state. For example, if a caller wants to change the current state, state 2, using transition 0, the caller would write: state2.chgSt(0); This implies that the transition 0 is relative to the state. The same unaltered call would be sm.chgSt(0); in which 'sm' is the state manager of state 2 and its siblings. It is less obvious from the second form that the processor is using the current state (2)'s transition 0, as opposed to, perhaps, state 1 or 6's transition with id 0. The second argument, val, is an optional value to send in to the transition function." />
<page href="FStEngOneFive_19.html" title="remState" text="remState Availability Flash Player 6 r65. Usage myhState.remState() Returns Nothing Description Deletes memory associated with this state" />
<page href="FStEngOneFive_8.html" title="addEntryNotice" text="addEntryNotice Availability Flash Player 6 r65. Usage myhState.addEntryNotice(listener) Parameters listener Listener object that wants to receive onEnter message when this state is made active. Returns Nothing Description This is a new method of FStEng v1-5. It lets anyone register a listener to the event when a state becomes active. It could be used by a presentation to be notified when a particular state becomes active, perhaps fulfilling some goal. Unlike entActs(), this mechanism allows anyone to execute actions when the state is activated." />
<page href="FStEngOneFive_20.html" title="removeEntryNotice" text="removeEntryNotice Availability Flash Player 6 r65. Usage myhState.removeEntryNotice(listener) Parameters listener Listener object registered to receive entry notices. Returns Nothing Description This is a new method of FStEng v1-5. It removes the listener from the list of those notified when the state becomes active." />
<page href="FStEngOneFive_11.html" title="addLeaveNotice" text="addLeaveNotice Availability Flash Player 6 r65. Usage myhState.addLeaveNotice(listener) Parameters listener Listener object that wants to receive onLeave message when this state is exited (deactivated). Returns Nothing Description This is a new method of FStEng v1-5. It lets anyone register a listener to the event when a state is deactivated. It could be used by a presentation to be notified when a particular state is left, perhaps fulfilling some goal. Unlike lvActs(), this mechanism allows anyone to execute actions when the state is deactivated." />
<page href="FStEngOneFive_21.html" title="removeLeaveNotice" text="removeLeaveNotice Availability Flash Player 6 r65. Usage myhState.removeLeaveNotice(listener) Parameters listener Listener object registered to receive leave notices. Returns Nothing Description This is a new method of FStEng v1-5. It removes the listener from the list of those notified when the state is deactived." />
<page href="FStEngOneFive_16.html" title="isActive" text="isActive Availability Flash Player 6 r65. Usage myhState.isActive() Returns True if the state is active, false if not. Description convenience function. Returns true if this state is currently active, false if not." />
<page href="FStEngOneFive_13.html" title="addTrans" text="addTrans Availability Flash Player 6 r65. Usage myhState.addTrans(id, trans, tf) Parameters id ID of the transition (must be unique for this state) trans A trans or transLvl object instance tf Trigger name (string) for this transition (FStEng v1-5) Returns Nothing Description Add a transition (either simple or multi-level) to this state. If the developer wants to manually code the event handler, then the developer uses chgSt() to fire this transition when it is triggered. To use the v1-5 event handling mechanism, simply tell this method the event name string (third parameter)." />
<page href="FStEngOneFive_10.html" title="addIntAct" text="addIntAct Availability Flash Player 6 r65. Usage myhState.addIntAct(id, actfn, actTrig) Parameters id ID of the internal action (must be unique with respect to other actions on this state) actfn Function to call when action is triggered actTrig Trigger name (string) for this transition (FStEng v1-5) Returns Nothing Description Add an internal action for the state. If the developer wants to manually code the event handler, then the developer uses execIntAct() to fire this action when it is triggered. To use the v1-5 event handling mechanism, simply tell this method the event name string (third parameter)." />
<page href="FStEngOneFive_15.html" title="execIntAct" text="execIntAct Availability Flash Player 6 r65. Usage myhState.execIntAct(id, val) Parameters id ID of the internal action val Optional value to pass action function Returns Nothing Description Executes internal action with id for the state Can't do error checking in Flash 5 because this.intActs[id] is a function and there's a bug that makes intActs[id] == null. We should use typechecking in Flash 6" />
<page title="addPulseActivity" href="FStEngOneFive_12.html" text="addPulseActivity Availability Flash Player 6 r65. Usage myhState.addPulseActivity(id, intvl, fnOrMet, obj) Parameters id ID of the activity (must be unique among activities on this state) intvl Interval, in milliseconds, between calls fnOrMet Function object, or method name (string) to invoke obj If fnOrMet is the method name, this is the object on which the method resides Returns Nothing Description Use this method to add an activity to the state that fires at a specified interval. You can specify a function or method to call. Note: if you need to refer to the timeline from within a function, use the last example to call your function. Example // For a function: myFuncmyState.addPulseActivity(0, 500, myFunc);// For a method: myObj.myMethodmyState.addPulseActivity(0, 500, &quot;myMethod&quot;, myObj);// For a function needing access to the timeline:myState.addFPulseActivity(0, 20, &quot;myFunc&quot;, this); // when 'this' is the timeline" />
<page title="addFPulseActivity" href="FStEngOneFive_9.html" text="addFPulseActivity Availability Flash Player 6 r65. Usage myhState.addFPulseActivity(id, intvl, fnOrMet, obj) Parameters id ID of the activity (must be unique among activities on this state) intvl Interval, in frames, between calls fnOrMet Function object, or method name (string) to invoke obj If fnOrMet is the method name, this is the object on which the method resides Returns Nothing Description Use this method to add an activity to the state that fires every x frames. You can specify a function or method to call. Note: if you need to refer to the timeline from within a function, use the last example to call your function. Example // For a function: myFuncmyState.addFPulseActivity(0, 20, myFunc);// For a method: myObj.myMethodmyState.addFPulseActivity(0, 20, &quot;myMethod&quot;, myObj);// For a function needing access to the timeline:myState.addFPulseActivity(0, 20, &quot;myFunc&quot;, this); // when 'this' is the timeline" />
<page href="FStEngOneFive_18.html" title="remPulseActivity" text="remPulseActivity Availability Flash Player 6 r65. Usage myhState.remPulseActivity(id) Parameters id ID of the activity Returns Nothing Description Removes the specified pulse activity from the state." />
<page title="addContinActivity" href="FStEngOneFive_7.html" text="addContinActivity Availability Flash Player 6 r65. Usage myhState.addContinActivity(id, mclip, hideClip) Parameters id ID for this continuous activity (must be unique only for other continuous activities on this state) mclip Movie clip to activate/deactivate hideClip Returns Nothing Description Adds a continuous state activity for the state. A continuous activity is simply a mechanism to start and stop a movie clip upon entry/exit from a state. Upon state entry, the movie clip is told &quot;gotoAndPlay(2)&quot;. On exit, the clip is told &quot;gotoAndStop(1)&quot;. There is a parameter, hideClip, that says whether or not to make the movie clip invisible (default is true) when the state is inactive." />
<page href="FStEngOneFive_17.html" title="remContinActivity" text="remContinActivity Availability Flash Player 6 r65. Usage myhState.remContinActivity(id) Parameters id Returns Nothing Description This method removes the state activity with the given id from the state." />
<page href="FStEngOneFive_4.html" title="onEnter" text="onEnter Availability Flash Player 6 r65. Usage myhState.onEnter() Description This event is generated upon entry to a specified state if the developer has registered a state on-entry notice using addEntryNotice(). It passes the state name and a pointer to the state." />
<page href="FStEngOneFive_6.html" title="onLeave" text="onLeave Availability Flash Player 6 r65. Usage myhState.onLeave() Description This event is generated upon leaving a specified state if the developer has registered a state on-leave notice using addLeaveNotice(). It passes the state name and a pointer to the state." />
<page href="FStEngOneFive_2.html" title="entActs" text="entActs Availability Flash Player 6 r65. Usage myhState.entActs() Description Actions executed when entering state. Override this method to use your own actions when the state is entered. By default, it prints a notice in the Output window." />
<page href="FStEngOneFive_3.html" title="lvActs" text="lvActs Availability Flash Player 6 r65. Usage myhState.lvActs() Description Actions executed when leaving the state. Override this method to use your own actions when the state is exited. By default, it prints a notice in the Output window." />
<page href="FStEngOneFive_5.html" title="onEvent" text="onEvent Availability Flash Player 6 r65. Usage myhState.onEvent() Description This is a new feature of FStEng v1-5, which provides an easy way to direct and process events. Rather than having the developer provide an ieh() method, which determines the current state and which transitions or actions should be triggered, the new mechanism automatically routes the event to the most specific (deepest in network) active state's onEvent handler. The handler, by default, looks through the triggers of the transitions and internal actions on the state. If a trigger is true, it then fires the transition or action. The default routine passes the event to the state's parent to check its transitions and actions as well. If a transition gets fired, then parent states do not evaluate their transitions, but still evaluate their internal action triggers. This extra processing can add time because all triggers are checked in the chain of active states, regardless of their chance of success. The beauty of this system is that if a state wants to optimize event handling for itself and its sub-networks, it merely needs to override onEvent and follow the rules about passing up the event once finished. If you really need to optimize the event handling, you can still override ieh() and bypass this feature completely, and do it as described in our book." />
<page title="stateEngine" href="FStEngOneFive_66.html" text="stateEngine Availability Flash Player 6 r65. Description The stateEngine is the main data structure for the hierarchical state machine. Author Jonathan Kaye (FlashSim.com) Example myStEng = new stateEngine(&quot;state engine name&quot;, 0, this, { ... name-function pairs for trigger table ... });" />
<page href="FStEngOneFive_81.html" title="setStateNetwork" text="setStateNetwork Availability Flash Player 6 r65. Usage mystateEngine.setStateNetwork(sn) Parameters sn topmost state Returns Nothing Description Attaches the state network (referred to by topmost state) to this state engine." />
<page href="FStEngOneFive_77.html" title="remStateEngine" text="remStateEngine Availability Flash Player 6 r65. Usage mystateEngine.remStateEngine() Returns Nothing Description Remove memory associated with the state engine passed in, then delete the state engine itself." />
<page href="FStEngOneFive_69.html" title="activate" text="activate Availability Flash Player 6 r65. Usage mystateEngine.activate(noHistReset) Parameters noHistReset (optional) Set this to 'true' if you do not want to reset the history mechanism throughout the system. Default is false. Returns Nothing Description Activates the state engine. If 'noHistReset' is present and true, don't reset the history mechanism for the whole network. You usually want to allow the resetting." />
<page href="FStEngOneFive_72.html" title="deactivate" text="deactivate Availability Flash Player 6 r65. Usage mystateEngine.deactivate() Returns Nothing Description Deactivate the state engine." />
<page href="FStEngOneFive_70.html" title="addListener" text="addListener Availability Flash Player 6 r65. Usage mystateEngine.addListener(listener) Parameters listener Can be a function or an object Returns Nothing Description Adds the given listener to the list of listeners notified on this engine's events. The listener can be a function or an object. If it's an object, then it must have an ieh() method defined to receive events." />
<page href="FStEngOneFive_78.html" title="removeListener" text="removeListener Availability Flash Player 6 r65. Usage mystateEngine.removeListener(listener) Parameters listener Can be a function or an object Returns Nothing Description" />
<page href="FStEngOneFive_80.html" title="setOracle" text="setOracle Availability Flash Player 6 r65. Usage mystateEngine.setOracle(obj) Parameters obj A function or object that wants to serve as oracle for this engine Returns Returns true if the oracle has been set, false if there existed an oracle set already, or undefined if the oracle passed in does not exist in the proper format Description This routine registers the given function or object as the oracle of this state engine. If the caller supplies an object, it must have an irh() method defined (that is what is called when the engine does a askOracle())." />
<page href="FStEngOneFive_76.html" title="notifyListeners" text="notifyListeners Availability Flash Player 6 r65. Usage mystateEngine.notifyListeners(eventName, val) Parameters eventName Name (string) of the event val (optional) Event value Returns Nothing Description This routine is used to broadcast an event from the state engine. It is required to provide an event name (event id), but the value is determined, if any, based on which event is broadcast." />
<page href="FStEngOneFive_71.html" title="askOracle" text="askOracle Availability Flash Player 6 r65. Usage mystateEngine.askOracle(reqName, val) Parameters reqName Name (string) of the request val (optional) Value associated with the request Returns Gives back the value that the oracle has returned, if any. Description This method is used to request information from the engine's oracle. The oracle must be set up in advance to answer these types of requests. The oracle must have a method named irh() to receive the request, and must return a value. This value is returned from askOracle()." />
<page href="FStEngOneFive_74.html" title="ieh" text="ieh Availability Flash Player 6 r65. Usage mystateEngine.ieh(eventName, val) Parameters eventName Name (string) of event val (optional) Value associated with the event Returns Nothing Description This is the default internal event handler for the stage engine. In version 1 of FStEng, developers were supposed to override this method with their own event handler that found the active state(s) and executed actions, transitions, and activities. In version 1.5, however, the event handling was modified to alleviate this meticulous burden from the developer, at the expense of some small time expense. In version 1.5, the default ieh() method sends the event to the active state(s)' onEvent method. The state, by default, runs through its transition and internal action triggers. If any are true, then it fires those actions. See the description of onEvent in the state documentation. The developer does not override the ieh() method, unless the developer needs to optimize the event handling at a global level." />
<page href="FStEngOneFive_82.html" title="xeh" text="xeh Availability Flash Player 6 r65. Usage mystateEngine.xeh(eventName, val) Parameters eventName Name (string) of event val (optional) Value associated with the event Returns Nothing Description This is the default external event handler for the state engine. Developers must override this method if they expect to receive events from outside objects (outside objects explicitly call this method). The default method merely announces that it has been called." />
<page href="FStEngOneFive_75.html" title="irh" text="irh Availability Flash Player 6 r65. Usage mystateEngine.irh(eventName, val) Parameters eventName Name (string) of request val (optional) Value associated with the request Returns Returns the value it receives from asking the engine's oracle, or undefined if no oracle has been set. Description This is the default internal request handler for the state engine. Developers must override this method if they expect to receive requests from objects controlled by this state engine. The default method merely announces that it has been called, and tries to use the engine's oracle to answer the request." />
<page href="FStEngOneFive_83.html" title="xrh" text="xrh Availability Flash Player 6 r65. Usage mystateEngine.xrh(eventName, val) Parameters eventName Name (string) of request val (optional) Value associated with the request Returns Since this method is supposed to be overriden if it is used, by default, it returns undefined Description This is the default external request handler for the state engine. Developers must override this method if they expect to receive requests from outside objects (outside objects explicitly call this method). The default method merely announces that it has been called, and returns undefined." />
<page href="FStEngOneFive_79.html" title="setEventTrigger" text="setEventTrigger Availability Flash Player 6 r65. Usage mystateEngine.setEventTrigger(trigName, trigFn) Parameters trigName String name of the trigger trigFn Function that returns true if the trigger is met. The trigger function will receive the event name, value, and the instance name of who sent the event Returns Nothing Description This method registers a trigger on the state engine's trigger table. Trigger tables are only used in FStEng v1-5 (not the book version)." />
<page href="FStEngOneFive_73.html" title="getEventTrigger" text="getEventTrigger Availability Flash Player 6 r65. Usage mystateEngine.getEventTrigger(trigName) Parameters trigName String name of the trigger Returns Function object associated with the trigger, or undefined if no trigger can be found with that name. Description Return the name" />
<page href="FStEngOneFive_67.html" title="onActivate" text="onActivate Availability Flash Player 6 r65. Usage mystateEngine.onActivate() Description The default onActivate event only sends a message to the Output window." />
<page href="FStEngOneFive_68.html" title="onDeactivate" text="onDeactivate Availability Flash Player 6 r65. Usage mystateEngine.onDeactivate() Description The default onDeactivate event only sends a message to the Output window." />
<page href="FStEngOneFive_84.html" title="stateMgr" text="stateMgr Availability Flash Player 6 r65. Description The state (network) manager class is used at run-time to manage which state(s) are active and which have been visited last (the history mechanism), in each network (collection of states). Author Jonathan Kaye (FlashSim.com)" />
<page href="FStEngOneFive_85.html" title="chgSt" text="chgSt Availability Flash Player 6 r65. Usage mystateMgr.chgSt(transID, netLvl, val) Parameters transID ID of the transition to fire netLvl it is a transition off of the state network level (container state) into the state network. The third parameter, 'val', is an optional argument that is passed to the transition function. val Returns Nothing Description Change the current state along transition with id # 'trans'. if netLvl is true," />
<page href="FStEngOneFive_45.html" title="state" text="state Availability Flash Player 6 r65. Description Simple state as part of a statechart. Author Jonathan Kaye (FlashSim.com)" />
<page href="FStEngOneFive_63.html" title="remState" text="remState Availability Flash Player 6 r65. Usage mystate.remState() Returns Nothing Description Deletes memory associated with this state" />
<page href="FStEngOneFive_52.html" title="addEntryNotice" text="addEntryNotice Availability Flash Player 6 r65. Usage mystate.addEntryNotice(listener) Parameters listener Listener object that wants to receive onEnter message when this state is made active. Returns Nothing Description This is a new method of FStEng v1-5. It lets anyone register a listener to the event when a state becomes active. It could be used by a presentation to be notified when a particular state becomes active, perhaps fulfilling some goal. Unlike entActs(), this mechanism allows anyone to execute actions when the state is activated." />
<page href="FStEngOneFive_64.html" title="removeEntryNotice" text="removeEntryNotice Availability Flash Player 6 r65. Usage mystate.removeEntryNotice(listener) Parameters listener Listener object registered to receive entry notices. Returns Nothing Description This is a new method of FStEng v1-5. It removes the listener from the list of those notified when the state becomes active." />
<page href="FStEngOneFive_55.html" title="addLeaveNotice" text="addLeaveNotice Availability Flash Player 6 r65. Usage mystate.addLeaveNotice(listener) Parameters listener Listener object that wants to receive onLeave message when this state is exited (deactivated). Returns Nothing Description This is a new method of FStEng v1-5. It lets anyone register a listener to the event when a state is deactivated. It could be used by a presentation to be notified when a particular state is left, perhaps fulfilling some goal. Unlike lvActs(), this mechanism allows anyone to execute actions when the state is deactivated." />
<page href="FStEngOneFive_65.html" title="removeLeaveNotice" text="removeLeaveNotice Availability Flash Player 6 r65. Usage mystate.removeLeaveNotice(listener) Parameters listener Listener object registered to receive leave notices. Returns Nothing Description This is a new method of FStEng v1-5. It removes the listener from the list of those notified when the state is deactived." />
<page href="FStEngOneFive_58.html" title="chgSt" text="chgSt Availability Flash Player 6 r65. Usage mystate.chgSt(transID, val) Parameters transID val Returns Nothing Description Change state using transition trans_i, with an optional value for the transition function as a second argument. If you look at the code, this function passes the information to the chgSt method of the state manager to do the real work. The reason we define this dummy is so that modelers see the direct relationship to the transition id, which is unique by state. For example, if a caller wants to change the current state, state 2, using transition 0, the caller would write: state2.chgSt(0); This implies that the transition 0 is relative to the state. The same unaltered call would be sm.chgSt(0); in which 'sm' is the state manager of state 2 and its siblings. It is less obvious from the second form that the processor is using the current state (2)'s transition 0, as opposed to, perhaps, state 1 or 6's transition with id 0. The second argument, val, is an optional value to send in to the transition function." />
<page href="FStEngOneFive_60.html" title="isActive" text="isActive Availability Flash Player 6 r65. Usage mystate.isActive() Returns True if the state is active, false if not. Description convenience function. Returns true if this state is currently active, false if not." />
<page href="FStEngOneFive_57.html" title="addTrans" text="addTrans Availability Flash Player 6 r65. Usage mystate.addTrans(id, trans, tf) Parameters id ID of the transition (must be unique for this state) trans A trans or transLvl object instance tf Trigger name (string) for this transition (FStEng v1-5) Returns Nothing Description Add a transition (either simple or multi-level) to this state. If the developer wants to manually code the event handler, then the developer uses chgSt() to fire this transition when it is triggered. To use the v1-5 event handling mechanism, simply tell this method the event name string (third parameter)." />
<page href="FStEngOneFive_54.html" title="addIntAct" text="addIntAct Availability Flash Player 6 r65. Usage mystate.addIntAct(id, actfn, actTrig) Parameters id ID of the internal action (must be unique with respect to other actions on this state) actfn Function to call when action is triggered actTrig Trigger name (string) for this transition (FStEng v1-5) Returns Nothing Description Add an internal action for the state. If the developer wants to manually code the event handler, then the developer uses execIntAct() to fire this action when it is triggered. To use the v1-5 event handling mechanism, simply tell this method the event name string (third parameter)." />
<page href="FStEngOneFive_59.html" title="execIntAct" text="execIntAct Availability Flash Player 6 r65. Usage mystate.execIntAct(id, val) Parameters id ID of the internal action val Optional value to pass action function Returns Nothing Description Executes internal action with id for the state Can't do error checking in Flash 5 because this.intActs[id] is a function and there's a bug that makes intActs[id] == null. We should use typechecking in Flash 6" />
<page title="addPulseActivity" href="FStEngOneFive_56.html" text="addPulseActivity Availability Flash Player 6 r65. Usage mystate.addPulseActivity(id, intvl, fnOrMet, obj) Parameters id ID of the activity (must be unique among activities on this state) intvl Interval, in milliseconds, between calls fnOrMet Function object, or method name (string) to invoke obj If fnOrMet is the method name, this is the object on which the method resides Returns Nothing Description Use this method to add an activity to the state that fires at a specified interval. You can specify a function or method to call. Note: if you need to refer to the timeline from within a function, use the last example to call your function. Example // For a function: myFuncmyState.addPulseActivity(0, 500, myFunc);// For a method: myObj.myMethodmyState.addPulseActivity(0, 500, &quot;myMethod&quot;, myObj);// For a function needing access to the timeline:myState.addPulseActivity(0, 20, &quot;myFunc&quot;, this); // when 'this' is the timeline" />
<page title="addFPulseActivity" href="FStEngOneFive_53.html" text="addFPulseActivity Availability Flash Player 6 r65. Usage mystate.addFPulseActivity(id, intvl, fnOrMet, obj) Parameters id ID of the activity (must be unique among activities on this state) intvl Interval, in frames, between calls fnOrMet Function object, or method name (string) to invoke obj If fnOrMet is the method name, this is the object on which the method resides Returns Nothing Description Use this method to add an activity to the state that fires every x frames. You can specify a function or method to call. Note: if you need to refer to the timeline from within a function, use the last example to call your function. Example // For a function: myFuncmyState.addFPulseActivity(0, 20, myFunc);// For a method: myObj.myMethodmyState.addFPulseActivity(0, 20, &quot;myMethod&quot;, myObj);// For a function needing access to the timeline:myState.addFPulseActivity(0, 20, &quot;myFunc&quot;, this); // when 'this' is the timeline" />
<page href="FStEngOneFive_62.html" title="remPulseActivity" text="remPulseActivity Availability Flash Player 6 r65. Usage mystate.remPulseActivity(id) Parameters id ID of the activity Returns Nothing Description Removes the specified pulse activity from the state." />
<page title="addContinActivity" href="FStEngOneFive_51.html" text="addContinActivity Availability Flash Player 6 r65. Usage mystate.addContinActivity(id, hideClip) Parameters id ID for this continuous activity (must be unique only for other continuous activities on this state) hideClip Returns Nothing Description Adds a continuous state activity for the state. A continuous activity is simply a mechanism to start and stop a movie clip upon entry/exit from a state. Upon state entry, the movie clip is told &quot;gotoAndPlay(2)&quot;. On exit, the clip is told &quot;gotoAndStop(1)&quot;. There is a parameter, hideClip, that says whether or not to make the movie clip invisible (default is true) when the state is inactive." />
<page href="FStEngOneFive_61.html" title="remContinActivity" text="remContinActivity Availability Flash Player 6 r65. Usage mystate.remContinActivity(id) Parameters id Returns Nothing Description This method removes the state activity with the given id from the state." />
<page href="FStEngOneFive_48.html" title="onEnter" text="onEnter Availability Flash Player 6 r65. Usage mystate.onEnter() Description This event is generated upon entry to a specified state if the developer has registered a state on-entry notice using addEntryNotice(). It passes the state name and a pointer to the state." />
<page href="FStEngOneFive_50.html" title="onLeave" text="onLeave Availability Flash Player 6 r65. Usage mystate.onLeave() Description This event is generated upon leaving a specified state if the developer has registered a state on-leave notice using addLeaveNotice(). It passes the state name and a pointer to the state." />
<page href="FStEngOneFive_46.html" title="entActs" text="entActs Availability Flash Player 6 r65. Usage mystate.entActs() Description Actions executed when entering state. Override this method to use your own actions when the state is entered. By default, it prints a notice in the Output window." />
<page href="FStEngOneFive_47.html" title="lvActs" text="lvActs Availability Flash Player 6 r65. Usage mystate.lvActs() Description Actions executed when leaving the state. Override this method to use your own actions when the state is exited. By default, it prints a notice in the Output window." />
<page href="FStEngOneFive_49.html" title="onEvent" text="onEvent Availability Flash Player 6 r65. Usage mystate.onEvent() Description This is a new feature of FStEng v1-5, which provides an easy way to direct and process events. Rather than having the developer provide an ieh() method, which determines the current state and which transitions or actions should be triggered, the new mechanism automatically routes the event to the most specific (deepest in network) active state's onEvent handler. The handler, by default, looks through the triggers of the transitions and internal actions on the state. If a trigger is true, it then fires the transition or action. The default routine passes the event to the state's parent to check its transitions and actions as well. If a transition gets fired, then parent states do not evaluate their transitions, but still evaluate their internal action triggers. This extra processing can add time because all triggers are checked in the chain of active states, regardless of their chance of success. The beauty of this system is that if a state wants to optimize event handling for itself and its sub-networks, it merely needs to override onEvent and follow the rules about passing up the event once finished. If you really need to optimize the event handling, you can still override ieh() and bypass this feature completely, and do it as described in our book." />
<page href="FStEngOneFive_86.html" title="transLvl" text="transLvl Availability Flash Player 6 r65. Description The transLvl is a transition that links two states (source and target) not in the same layer of the network, i.e., not sibling states. To traverse this transition requires knowing the least common ancestor (LCA) of the two states, and then the path from the LCA down to the target (or history). Author Jonathan Kaye (FlashSim.com)" />
<page href="FStEngOneFive_87.html" title="remTrans" text="remTrans Availability Flash Player 6 r65. Usage mytransLvl.remTrans() Returns Nothing Description Remove the transition object." />
<page href="FStEngOneFive_20.html" title="RTVis" text="This component is a tool for watching the run-time behavior of a state engine" />
</book>